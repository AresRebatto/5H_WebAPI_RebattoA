// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassMindAPI.Migrations
{
    [DbContext(typeof(ClassMindContext))]
    partial class ClassMindContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Interrogazione", b =>
                {
                    b.Property<int>("InterrogazioneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudenteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InterrogazioneId");

                    b.HasIndex("MateriaId");

                    b.HasIndex("StudenteId");

                    b.ToTable("Interrogazioni");
                });

            modelBuilder.Entity("Lezione", b =>
                {
                    b.Property<int>("LezioneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("GiornoSettimana")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LezioneId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Lezioni");
                });

            modelBuilder.Entity("Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MateriaId");

                    b.ToTable("Materie");
                });

            modelBuilder.Entity("Studente", b =>
                {
                    b.Property<int>("StudenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudenteId");

                    b.ToTable("Studenti");
                });

            modelBuilder.Entity("Interrogazione", b =>
                {
                    b.HasOne("Materia", "Materia")
                        .WithMany("Interrogazioni")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studente", "Studente")
                        .WithMany("Interrogazioni")
                        .HasForeignKey("StudenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("Lezione", b =>
                {
                    b.HasOne("Materia", "Materia")
                        .WithMany("Lezioni")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("Materia", b =>
                {
                    b.Navigation("Interrogazioni");

                    b.Navigation("Lezioni");
                });

            modelBuilder.Entity("Studente", b =>
                {
                    b.Navigation("Interrogazioni");
                });
#pragma warning restore 612, 618
        }
    }
}
